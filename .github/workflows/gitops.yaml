name: Okteto and GitOps

on:
  push:
    branches:
    - main
    paths:
    - 'client/**'
    - 'server/**'

jobs:
  build:
    name: Build and Push the image
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: client
        push: true
        tags: arshsharma/todolist-client:${{ github.sha }} , arshsharma/todolist-client:latest
    
    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        context: server
        push: true
        tags: arshsharma/todolist-server:${{ github.sha }} , arshsharma/todolist-server:latest

    - name: Generate GitHub App Installation Token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.BOT_APP_ID }}
        private_key: ${{ secrets.BOT_PRIVATE_KEY }}
    
    - name: Check out manifests repository
      uses: actions/checkout@v2
      with:
        repository: okteto/todolist-gitops-manifests
        token: ${{ steps.generate_token.outputs.token }}
        path: manifests

    - name: List files in the charts directory
      run: ls -lR "${{ github.workspace }}/manifests/charts/todolist"

    - name: Update image tag in manifests
      run: |
        chart_dir="${{ github.workspace }}/manifests/charts/todolist"
        new_image_tag=${{ github.sha }}
        sed -i "/clientImage:/,/tag: /s/tag: .*/tag: $new_image_tag/" "$chart_dir/values-prod.yaml"
        sed -i "/serverImage:/,/tag: /s/tag: .*/tag: $new_image_tag/" "$chart_dir/values-prod.yaml"

        cd manifests
        git checkout -b update-image-${{ github.sha }}
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git commit -am "Update image tag"
        git push origin update-image-${{ github.sha }}
      env:
        GIT_COMMITTER_NAME: GitHub Action
        GIT_COMMITTER_EMAIL: action@github.com
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

    - name: Verify branch existence in the remote
      run: |
        for i in {1..5}; do
          if git ls-remote --heads origin update-image-${{ github.sha }} | grep -q 'update-image-${{ github.sha }}'; then
            echo "Branch found in remote repository."
            break
          else
            echo "Waiting for branch to be available in remote repository..."
            sleep 5
          fi
        done

    - name: Create Pull Request
      uses: repo-sync/pull-request@v2
      with:
        source_branch: "update-image-${{ github.sha }}"
        destination_branch: "main"
        github_token: ${{ steps.generate_token.outputs.token }}
        pr_title: "Update image tag"
        pr_body: "Automated image tag update"
        pr_label: "automated-pr"